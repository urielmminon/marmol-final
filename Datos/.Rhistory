rm(densidades, dsists)
rm(densidades, dists)
ls()
a <- 5
str(a)
mode(a)
class(a)
length(a)
length(a)
a[2] <- 2
length(a)
c(1,2,3)
1:10
seq(1,10,2)
vector(mode="numeric", length=10)
array(1:5, dim = c(1,5))
array(1:5, dim = c(5,1))
array(1:9, dim = c(3,3,3))
M <- c("a","b")
x <- 1:4
n <- 10
M <- c("a","b")
y <- 2;4
y <- 2:4
data.frame(x,n)
data.frame(x,M)
data.frame(x,y)
ts(1:47, frequency = 12, start = c(1959,2))
z <- ts(matrix(rnorm(300), 100,3), start = c(1959,2), frequency = 12)
class(z)
head(z)
plot(z)
library(ggplot2)
?ggplot
library(ggplot2)
library(dplyr)
# Pregunta 1
class(iris)
str(iris)
glimpse(iris)
summary(iris)
dim(iris)
iris
head(iris, 10)
?iris
str(iris)
glimpse(iris)
head(iris, 6)
glimpse(iris)
?filter
filter(iris, Species= 'setosa')
filter(iris, Species == "setosa")
head(filter(iris, Species == "setosa"), n=6)
head(arrange(iris, desc(iris$Petal.Length)), n=6)
nueva_var <- mutate_each(iris, funs(. * 10), iris$Sepal.Length)%>% tbl_df
nueva_var <- mutate_at(iris, funs(. * 10), iris$Sepal.Length)%>% tbl_df
nueva_var <- mutate_at(iris, funs(. * 10), iris$Sepal.Length)
nueva <- mutate_at(iris, funs(. * 10), iris$Sepal.Length)
nueva <- mutate(iris, iris$Sepal.Length * 10)
nueva
head(nueva, n=6)
newdata <- na.omit(iris, iris$Sepal.Width)
str(newdata)
iris %>% group_by(Species) %>% summarise(mean(Petal.Width))
qplot(Sepal.Length, Sepal.Width, data = iris, colour = Species)
ggplot(iris, aes(Species, PetalLengthCm, fill=Species)) +
geom_boxplot()+
scale_y_continuous("Petal Length (cm)", breaks= seq(0,30, by=.5))+
labs(title = "Iris Petal Length Box Plot", x = "Species")
ggplot(iris, aes(Species, Petal.Length, fill=Species)) +
geom_boxplot()+
scale_y_continuous("Petal Length (cm)", breaks= seq(0,30, by=.5))+
labs(title = "Iris Petal Length Box Plot", x = "Species")
ggplot(iris, aes(Species, Petal.Length, fill=Species)) +
geom_boxplot()+
scale_y_continuous("Petal Length (cm)", breaks= seq(0,5, by=.5))+
labs(title = "Iris Petal Length Box Plot", x = "Species")
ggplot(iris, aes(Species, Petal.Length, fill=Species)) +
geom_boxplot()+
scale_y_continuous("Petal Length (cm)", breaks= seq(0,6, by=.5))+
labs(title = "Iris Petal Length Box Plot", x = "Species")
ggplot(iris, aes(Species, Petal.Length, fill=Species)) +
geom_boxplot()+
scale_y_continuous("Petal Length", breaks= seq(0,6, by=.5))+
labs(title = "Petal Length Box Plot", x = "Species")
ggplot(iris, aes(Species, Petal.Length, fill=Species)) +
geom_boxplot()+
scale_y_continuous("Petal Length", breaks= seq(0,6, by=.5))+
labs(title = "Petal Length Box Plot", x = "Species")
#2 k) Grafica de caja de la variable Petal.Length con distincion de especies
ggplot(iris, aes(Species, Petal.Length, fill=Species)) +
geom_boxplot()+
scale_y_continuous("Petal Length", breaks= seq(0,6, by=.5))+
labs(title = "Petal Length Box Plot", x = "Species")
library(ggplot2)
library(dplyr)
ggplot(iris, aes(Species, Petal.Length, fill=Species)) +
geom_boxplot()+
scale_y_continuous("Petal Length", breaks= seq(0,6, by=.5))+
labs(title = "Petal Length Box Plot", x = "Species")
espacio <- list(c("123"), c("231"), c("321"), c("213"), c("312"), c("132"))
espacio
length(espacio)
evento1 <-  list(c("123"))
proba_ocurri <- length(evento1)/length(espacio)
proba_ocurri
eventoA <-  list(c("123"), c("213"), c("312"), c("132"))
eventoB <-  list(c("231"), c("132"))
eventoA
print(eventoA)
print(eventoB)
AnB <-  intersect(eventoA, eventoB)
AnB
BuA <- union(eventoB, eventoA)
BuA
p(b) <- length(eventoB)/length(espacio)
proba_b <- length(eventoB)/length(espacio)
proba_b
X <- c(2, 1, 2, 1, 3, 3)
g <- data_frame(espacio)
g$C2_Pos <- X
g
var <- c("123", "231", "321", "213", "312", "132")
X <- c(2, 1, 2, 1, 3, 3)
g <- data_frame(var)
g$C2_Pos <- X
g
sum(g$C2_Pos ==1)
resulta <- len(g$C2_Pos ==1)/len(g$C2_Pos)
resulta <- length(g$C2_Pos ==1)/length(g$C2_Pos)
resulta
resultado <-  2/6
resultado
rBinomI_umm <- function(n,Prob){
U <- runif(1) #Paso 1, generar la funcion U tal que U está entre (0,1)
i <- 0        #Paso 2, inicializar i = 0
p <- (1-Prob)^n  #Paso 2.1, calcular p(0)
P <- p
while(U >= P){    #Paso 3, si U < F entonces X = i
p <- (Prob*(n-i))/((i+1)*(1-Prob))*p  #Paso 4, calcular p
P <- P + p
i <- i + 1      #Paso 5, volver al paso 3
}
i
}
n=10
p=0.3
X <- rBinomI_umm(n,p)
print(X)
set.seed(221285)
Simulaciones_umm <- rerun(10000, rBinomI_umm(n,p)) %>% flatten_dbl()
set.seed(221285)
Silumaciones_dbinom <- rbinom(10000,n , p)
head(Simulaciones_umm)
set.seed(221285)
Simulaciones_umm <- rerun(10000, rBinomI_umm(n,p)) %>% flatten_dbl()
BinomI_umm <- function(n,Prob){
U <- runif(1) #Paso 1, generar la funcion U tal que U está entre (0,1)
i <- 0        #Paso 2, inicializar i = 0
p <- (1-Prob)^n  #Paso 2.1, calcular p(0)
P <- p
while(U >= P){    #Paso 3, si U < F entonces X = i
p <- (Prob*(n-i))/((i+1)*(1-Prob))*p  #Paso 4, calcular p
P <- P + p
i <- i + 1      #Paso 5, volver al paso 3
}
i
}
n=10
p=0.3
X <- rBinomI_umm(n,p)
print(X)
set.seed(221285)
Simulaciones_umm <- rerun(10000, rBinomI_umm(n,p)) %>% flatten_dbl()
set.seed(221285)
Silumaciones_dbinom <- rbinom(10000,n , p)
head(Simulaciones_umm)
Simulaciones_umm <- rerun(10000, rBinomI_umm(10,0.3)) %>% flatten_dbl()
Simulaciones_umm <- rerun(10000, rBinomI_umm(n, p)) %>% flatten_dbl()
Simulaciones_umm <- rerun(10000, rBinomI_umm(n, p)) %>% flatten_dbl()
rBinomI_umm <- function(n,Prob){
U <- runif(1) #Paso 1, generar la funcion U tal que U está entre (0,1)
i <- 0        #Paso 2, inicializar i = 0
p <- (1-Prob)^n  #Paso 2.1, calcular p(0)
P <- p
while(U >= P){    #Paso 3, si U < F entonces X = i
p <- (Prob*(n-i))/((i+1)*(1-Prob))*p  #Paso 4, calcular p
P <- P + p
i <- i + 1      #Paso 5, volver al paso 3
}
i
}
n=10
p=0.3
X <- rBinomI_umm(n,p)
print(X)
set.seed(221285)
Simulaciones_umm <- rerun(10000, rBinomI_umm(n, p)) %>% flatten_dbl()
Simulaciones_umm <- rerun(10000, rBinomI_umm(n, p)) %>% flatten_dbl()
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
library(magrittr)
rBinomI_umm <- function(n,Prob){
U <- runif(1) #Paso 1, generar la funcion U tal que U está entre (0,1)
i <- 0        #Paso 2, inicializar i = 0
p <- (1-Prob)^n  #Paso 2.1, calcular p(0)
P <- p
while(U >= P){    #Paso 3, si U < F entonces X = i
p <- (Prob*(n-i))/((i+1)*(1-Prob))*p  #Paso 4, calcular p
P <- P + p
i <- i + 1      #Paso 5, volver al paso 3
}
i
}
n=10
p=0.3
X <- rBinomI_umm(n,p)
print(X)
set.seed(221285)
Simulaciones_umm <- rerun(10000, rBinomI_umm(n, p)) %>% flatten_dbl()
rBinomI_umm <- function(n,Prob){
U <- runif(1) #Paso 1, generar la funcion U tal que U está entre (0,1)
i <- 0        #Paso 2, inicializar i = 0
p <- (1-Prob)^n  #Paso 2.1, calcular p(0)
P <- p
while(U >= P){    #Paso 3, si U < F entonces X = i
p <- (Prob*(n-i))/((i+1)*(1-Prob))*p  #Paso 4, calcular p
P <- P + p
i <- i + 1      #Paso 5, volver al paso 3
}
i
}
n=10
p=0.3
X <- rBinomI_umm(n,p)
print(X)
set.seed(221285)
Simulaciones_umm <- rerun(10000, rBinomI_umm(n, p)) %>% flatten_dbl()
library(magrittr)
rBinomI_umm <- function(n,Prob){
U <- runif(1) #Paso 1, generar la funcion U tal que U está entre (0,1)
i <- 0        #Paso 2, inicializar i = 0
p <- (1-Prob)^n  #Paso 2.1, calcular p(0)
P <- p
while(U >= P){    #Paso 3, si U < F entonces X = i
p <- (Prob*(n-i))/((i+1)*(1-Prob))*p  #Paso 4, calcular p
P <- P + p
i <- i + 1      #Paso 5, volver al paso 3
}
i
}
n=10
p=0.3
X <- rBinomI_umm(n,p)
print(X)
set.seed(221285)
Simulaciones_umm <- rerun(10000, rBinomI_umm(n, p)) %>% flatten_dbl()
library(magrittr)
rBinomI_umm <- function(n,Prob){
U <- runif(1) #Paso 1, generar la funcion U tal que U está entre (0,1)
i <- 0        #Paso 2, inicializar i = 0
p <- (1-Prob)^n  #Paso 2.1, calcular p(0)
P <- p
while(U >= P){    #Paso 3, si U < F entonces X = i
p <- (Prob*(n-i))/((i+1)*(1-Prob))*p  #Paso 4, calcular p
P <- P + p
i <- i + 1      #Paso 5, volver al paso 3
}
i
}
n=10
p=0.3
X <- rBinomI_umm(n,p)
print(X)
set.seed(221285)
Simulaciones_umm <- rerun(10000, rBinomI_umm(n, p)) %>% flatten_dbl()
rBinomI_umm <- function(n,Prob){
U <- runif(1) #Paso 1, generar la funcion U tal que U está entre (0,1)
i <- 0        #Paso 2, inicializar i = 0
p <- (1-Prob)^n  #Paso 2.1, calcular p(0)
P <- p
while(U >= P){    #Paso 3, si U < F entonces X = i
p <- (Prob*(n-i))/((i+1)*(1-Prob))*p  #Paso 4, calcular p
P <- P + p
i <- i + 1      #Paso 5, volver al paso 3
}
i
}
n=10
Prob=0.3
X <- rBinomI_umm(n,Prob)
print(X)
set.seed(221285)
Simulaciones_umm <- rerun(10000, rBinomI_umm(n, Prob)) %>% flatten_dbl()
X <- rBinomI_umm(10, 0.3)
print(X)
set.seed(221285)
Simulaciones_umm <- rerun(10000, rBinomI_umm(10, 0.3)) %>% flatten_dbl()
rBinomial <- function(n,p){
U <- runif(1)
i <- 0
P <- (1-p)^n
F <- P
while(U >= F){
P <- ((n-i)*p)/((i+1)*(1-p))*P
F <- F + P
i <- i + 1
}
i
}
rBinomial(10,0.3)
set.seed(221285)
sims_bin <- rerun(10000, rBinomial(10,0.3)) %>% flatten_dbl()
rBinomI_umm <- function(n,Prob){
U <- runif(1) #Paso 1, generar la funcion U tal que U está entre (0,1)
i <- 0        #Paso 2, inicializar i = 0
p <- (1-Prob)^n  #Paso 2.1, calcular p(0)
P <- p
while(U >= P){    #Paso 3, si U < F entonces X = i
p <- (Prob*(n-i))/((i+1)*(1-Prob))*p  #Paso 4, calcular p
P <- P + p
i <- i + 1      #Paso 5, volver al paso 3
}
i
}
n=10
p=0.3
X <- rBinomI_umm(n,p)
print(X)
?ggplot()
set.seed(221285)
rBinom <- rerun(10000, rBinomI_umm(10,0.3)) %>% flatten_dbl()
set.seed(221285)
Silumaciones_dbinom <- rbinom(10000,n , p)
ggplot() +
geom_histogram(aes(x = Silumaciones_dbinom, y = ..density..), binwidth = 1) +
ggtitle("Simulaciones mediante la funcion rbinom") + theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Simulaciones", y = "Densidad")
library(ggplot2)
ggplot() +
geom_histogram(aes(x = Silumaciones_dbinom, y = ..density..), binwidth = 1) +
ggtitle("Simulaciones mediante la funcion rbinom") + theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Simulaciones", y = "Densidad")
?cbind
# instalar y usar ggbiplot para analizar PCA
install.packages("ggbiplot")
G_SEN<- read_html('http://www.senado.gob.mx/64/gaceta_del_senado#407')
html_structure(G_SEN)
html_text(G_SEN, trim=FALSE)
TXT<-html_nodes(G_SEN, css = "div.panel-default")
TEXT<-html_text(TXT, trim=FALSE)
ID_PRD<-grepl("de la Revoluci",TEXT,fixed=TRUE)
ID_MOR<-grepl("Morena",TEXT,fixed=TRUE)
ID_PAN<-grepl("Partido Acci",TEXT,fixed=TRUE)
ID_PRI<-grepl("Institucional",TEXT,fixed=TRUE)
ID_MC<- grepl("Ciudadano",TEXT, fixed=TRUE)
ID_IN<- grepl("decreto", TEXT, fixed=TRUE)
df_TXT<- tibble(TEXT,ID_MOR,ID_PAN,ID_PRI,ID_PRD,ID_MC,ID_IN)
in_TXT<- filter(df_TXT, ID_IN==TRUE)
in_DOC <- in_TXT["TEXT"]
pa_TXT<- filter(df_TXT, ID_IN==FALSE)
pa_DOC <- pa_TXT["TEXT"]
PRD<-filter(df_TXT,ID_PRD==TRUE)
PRD_IN<-filter(PRD, ID_IN==TRUE)
PRD_PA<-filter(PRD, ID_IN==FALSE)
PRD_DOC<-PRD["TEXT"]
n_prd<- nrow(PRD)
n_prdIN<-nrow(PRD_IN)
n_prdPA<-nrow(PRD_PA)
MOR<-filter(df_TXT,ID_MOR==TRUE)
MOR_IN<-filter(MOR, ID_IN==TRUE)
MOR_PA<-filter(MOR, ID_IN==FALSE)
MOR_DOC<- MOR["TEXT"]
n_mor<- nrow(MOR)
n_morIN<-nrow(MOR_IN)
n_morPA<-nrow(MOR_PA)
PAN<-filter(df_TXT,ID_PAN==TRUE)
PAN_IN<-filter(PAN, ID_IN==TRUE)
PAN_PA<-filter(PAN, ID_IN==FALSE)
PAN_DOC<- PAN["TEXT"]
n_pan<- nrow(PAN)
n_panIN<-nrow(PAN_IN)
n_panPA<-nrow(PAN_PA)
PRI<-filter(df_TXT,ID_PRI==TRUE)
PRI_IN<-filter(PRI, ID_IN==TRUE)
PRI_PA<-filter(PRI, ID_IN==FALSE)
PRI_DOC<- PRI["TEXT"]
n_pri<-nrow(PRI)
n_priIN<-nrow(PRI_IN)
n_priPA<-nrow(PRI_PA)
MC<-filter(df_TXT,ID_MC==TRUE)
MC_IN<-filter(MC, ID_IN==TRUE)
MC_PA<-filter(MC, ID_IN==FALSE)
MC_DOC<-MC["TEXT"]
n_mc<- nrow(MC)
n_mcIN<-nrow(MC_IN)
n_mcPA<-nrow(MC_PA)
counter<- tibble(n_mor, n_pan, n_pri, n_mc, n_prd)
counterIN<- tibble(n_morIN, n_panIN, n_priIN, n_mcIN, n_prdIN,n_morPA, n_panPA, n_priPA, n_mcPA, n_prdPA)
#counterPA<- tibble(n_morPA, n_panPA, n_priPA, n_mcPA, n_prdPA)
write.csv(counterIN,"Conteo131118IN.csv")
#write.csv(counterPA,"Conteo111018PA.csv")
write.csv(PRD_DOC, 'PRD131118.csv')
write.csv(MOR_DOC,'morena131118.csv')
write.csv(PAN_DOC,'PAN131118.csv')
write.csv(PRI_DOC,'PRI131118.csv')
write.csv(MC_DOC,'MC131118.csv')
write.csv(in_DOC, 'In131118.csv')
write.csv(pa_DOC, 'PA131118.csv')
library(tidyverse)
library(rvest)
library(stringr)
library(rebus)
#c?digo para generar los documentos de agenda
G_SEN<- read_html('http://www.senado.gob.mx/64/gaceta_del_senado#407')
html_structure(G_SEN)
html_text(G_SEN, trim=FALSE)
TXT<-html_nodes(G_SEN, css = "div.panel-default")
TEXT<-html_text(TXT, trim=FALSE)
ID_PRD<-grepl("de la Revoluci",TEXT,fixed=TRUE)
ID_MOR<-grepl("Morena",TEXT,fixed=TRUE)
ID_PAN<-grepl("Partido Acci",TEXT,fixed=TRUE)
ID_PRI<-grepl("Institucional",TEXT,fixed=TRUE)
ID_MC<- grepl("Ciudadano",TEXT, fixed=TRUE)
ID_IN<- grepl("decreto", TEXT, fixed=TRUE)
df_TXT<- tibble(TEXT,ID_MOR,ID_PAN,ID_PRI,ID_PRD,ID_MC,ID_IN)
in_TXT<- filter(df_TXT, ID_IN==TRUE)
in_DOC <- in_TXT["TEXT"]
pa_TXT<- filter(df_TXT, ID_IN==FALSE)
pa_DOC <- pa_TXT["TEXT"]
PRD<-filter(df_TXT,ID_PRD==TRUE)
PRD_IN<-filter(PRD, ID_IN==TRUE)
PRD_PA<-filter(PRD, ID_IN==FALSE)
PRD_DOC<-PRD["TEXT"]
n_prd<- nrow(PRD)
n_prdIN<-nrow(PRD_IN)
n_prdPA<-nrow(PRD_PA)
MOR<-filter(df_TXT,ID_MOR==TRUE)
MOR_IN<-filter(MOR, ID_IN==TRUE)
MOR_PA<-filter(MOR, ID_IN==FALSE)
MOR_DOC<- MOR["TEXT"]
n_mor<- nrow(MOR)
n_morIN<-nrow(MOR_IN)
n_morPA<-nrow(MOR_PA)
PAN<-filter(df_TXT,ID_PAN==TRUE)
PAN_IN<-filter(PAN, ID_IN==TRUE)
PAN_PA<-filter(PAN, ID_IN==FALSE)
PAN_DOC<- PAN["TEXT"]
n_pan<- nrow(PAN)
n_panIN<-nrow(PAN_IN)
n_panPA<-nrow(PAN_PA)
PRI<-filter(df_TXT,ID_PRI==TRUE)
PRI_IN<-filter(PRI, ID_IN==TRUE)
PRI_PA<-filter(PRI, ID_IN==FALSE)
PRI_DOC<- PRI["TEXT"]
n_pri<-nrow(PRI)
n_priIN<-nrow(PRI_IN)
n_priPA<-nrow(PRI_PA)
MC<-filter(df_TXT,ID_MC==TRUE)
MC_IN<-filter(MC, ID_IN==TRUE)
MC_PA<-filter(MC, ID_IN==FALSE)
MC_DOC<-MC["TEXT"]
n_mc<- nrow(MC)
n_mcIN<-nrow(MC_IN)
n_mcPA<-nrow(MC_PA)
counter<- tibble(n_mor, n_pan, n_pri, n_mc, n_prd)
counterIN<- tibble(n_morIN, n_panIN, n_priIN, n_mcIN, n_prdIN,n_morPA, n_panPA, n_priPA, n_mcPA, n_prdPA)
#counterPA<- tibble(n_morPA, n_panPA, n_priPA, n_mcPA, n_prdPA)
write.csv(counterIN,"Conteo131118IN.csv")
#write.csv(counterPA,"Conteo111018PA.csv")
write.csv(PRD_DOC, 'PRD131118.csv')
write.csv(MOR_DOC,'morena131118.csv')
write.csv(PAN_DOC,'PAN131118.csv')
write.csv(PRI_DOC,'PRI131118.csv')
write.csv(MC_DOC,'MC131118.csv')
write.csv(in_DOC, 'In131118.csv')
write.csv(pa_DOC, 'PA131118.csv')
getwd()
library.devtools
install.packages("library.devtools")
install.packages("lib.devtools")
install.packages("devtools")
library(feather)
devtools::install_github("wesm/feather/R")
library(feather)
getwd()
write_feather(x = iris, path='/MineriaDeDatos/models/iris.feather')
load("rabbits.RData")
head(rabbits)
load("rabbits.RData")
head(rabbits)
sims_df <- data.frame(n_sim = 1:jags_fit_rab$BUGSoutput$n.sims,
jags_fit_rab$BUGSoutput$sims.matrix) %>%
dplyr::select(-deviance) %>%
gather(parametro, value, -n_sim)
sims_df <- data.frame(n_sim = 1:jags_fit$BUGSoutput$n.sims,
jags_fit$BUGSoutput$sims.matrix) %>%
dplyr::select(-deviance) %>%
gather(parametro, value, -n_sim)
setwd("/home/hector/marmol-final/Datos")
load(walmart.rds)
load("walmart.rds")
load("walmart.rds")
readRDS("walmart.rds")
x <- readRDS("walmart.rds")
View(x)
View(x)
library(feather)
feat <-  read_feather("walmart.feather")
View(feat)
